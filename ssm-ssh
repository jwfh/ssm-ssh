#!/usr/bin/env sh

VERBOSE=0
SCRIPT="$(basename $0)"

RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m'
INFO="${GREEN}INFO:${NC}"
WARN="${YELLOW}WARN:${NC}"
FATAL="${RED}FATAL:${NC}"

PROFILE_FILE="$HOME/.config/ssm-ssh"

AWS_CMD="$(which aws)"

if [ -z "${AWS_CMD}" ]; then
	echo "The AWS CLI is not installed. Try running \`brew install aws-cli\`"
	exit 1
fi

log() {
	echo $* >&3
}

usage() {
	echo "Print usage here"
	echo "Then exit with $1"
	exit $1
}

get_aws_default_profile() {
	if [ $# -ne 1 ]; then
		echo "get_aws_default_profile takes 1 argument"
		exit 1
	fi
	if [ -f "${PROFILE_FILE}" ] && grep -q -E -e '^aws_profile=.+'; then
		awk -F= '/^aws_profile/ { print $2 }' | tail -n1
	else
		echo "No default AWS profile is set for $0"
		read -p "Enter a profile: " PROFILE
		set_aws_profile ${PROFILE}
		echo ${PROFILE}
	fi
}

set_aws_profile() {
	if [ $# -ne 1 ]; then
		echo "set_aws_profile takes 1 argument"
		exit 1
	fi
	if [ -f "${PROFILE_FILE}" ]; then :; else
		mkdir -p "$(dirname "${PROFILE_FILE}")"
		echo "aws_profile=$1" | tee "${PROFILE}"
	fi
}

is_private_ip() {
	if [ $# -ne 1 ]; then
		echo "is_private_ip takes 1 argument"
		exit 1
	fi
	echo $1 | grep -q -E -e '^(192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.)'
}

ip_to_instance_id() {
	AWS_CMD=$(which aws)
}

while [ "x$1" != "x" ]; do
    option=$1
    shift
    args="${args} \"${option}\""
    
    case ${option} in 
        *=*)
            optarg=`echo ${option} | sed -e 's,^[^=]*=,,'`
            ;;
    esac

    case ${option} in 
	--help | -h)
		usage 0
		;;
	--verbose | -v)
		VERBOSE=1
		;;
	--set-default-profile | -S)
		set_aws_profile "${optarg}"
		exit 0
		;;
	--)
		break
		;;
    esac
done


if [ "${VERBOSE}" == "1" ]; then
	exec 3>&2
	log "${INFO} Verbose mode enabled"
else
	exec 3>/dev/null
	log "${WARN} This should go to /dev/null. If you see this there is a bug in ${SCRIPT}" 
fi

if is_private_ip "192.168.0.2"; then
	echo private
else
	echo public
fi
